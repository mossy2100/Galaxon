@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    <li class="nav-item">
        <a asp-action="Privacy" asp-area="" asp-controller="Home" class="nav-link">Privacy</a>
    </li>
    
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a asp-action="Index" asp-area="" asp-controller="Document" class="nav-link">Documents</a>
        </li>
        <li class="nav-item">
            <a id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" class="nav-link" title="Manage account">Account</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="form-inline">
                <button id="logout" class="btn btn-link nav-link" type="submit">Logout</button>
            </form>
        </li>
    }
    else
    {
        @* <li class="nav-item"> *@
        @*     <a id="register" asp-area="Identity" asp-page="/Account/Register" class="nav-link">Register</a> *@
        @* </li> *@
        <li class="nav-item">
            <a id="login" asp-area="Identity" asp-page="/Account/Login" class="nav-link">Login</a>
        </li>
    }
</ul>
